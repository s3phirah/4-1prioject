<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
    
    <!-- tensorflowjs -->
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@2.0.0/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-vis"></script>

    <script type="application/octet-stream" src="./js/tensor.js"></script> 
    <script type="application/octet-stream" src="./js/weather.js"></script>
    <script type="application/octet-stream" src="./js/10.3.js"></script>
</head>
<body>
    <h4>Tiny TFJS example<hr/></h4>
    <div id="micro-out-div">Training...</div>
    <script>
        // 데이터
        // var 온도 = [20, 21, 22, 23];
        // var 판매량 = [40, 42, 44, 46]; // 결과
        // 만들것 => 봄 여름 가을 겨울 30개씩하고 
        // 날씨 맑 흐림 비 3가지로 나눔 =>이거하면 한글써야댐 그냥 넘기고 아래걸로
        // 습도 즉당히 랜덤함수 돌림 맑음, 흐림, 비는 별개로 둬야함
        // 바람 즉당히 랜덤함수 약간 조정 
        // 온도 요건 날씨, 계절따라 별도로 정함
        // 체감온도 하는게 맞


        var 판매_원인 = [[9,85.9,2.6,1.5],[7, 66.3,2.4,1.5],[12, 72.5,1.9,11],[16.8, 69.4,4,9],

        [7.4, 47.6,6.6,10.6],[5.4, 50.3, 3.5,10.4],[7.2, 61.1, 1.8,9.5],[11.6, 72.1, 1.6,10.4],

        [12.8, 82.5, 1.4,10.2],[14.2, 70.9,1.3,6.2],[18.5, 68.5,1,2],[19.9, 76.6,2.1,1.1],

        [17.4, 91.9, 2.9,0],[12, 94.5, 3.2,0],[11.6, 81.1,1.9,8],[16.4, 74.8,1.1,9.1],

        [11.1, 81.4,2,0],[9.3, 81.6, 2,0],[6.1, 86,4.1,1],[10.9, 77.5,2.9,2.1],

        [10.8, 63,1.4,7.5],[8.7, 63.3,1.9,10],[14.6, 79, 1.6,1],[18.4, 63.5,1.6,7.5],

        [15.3, 70.9,2.3,1.9],[12.7, 89.3,2.9,2.1],[12.5, 69,4.5,11.2],[16.6, 56.6,3.5,10.3],

        [17.9, 86.4,1.7,11.4],[12.1, 86.4,1.5,0.7],[16.8, 65.3, 2.5,12.1],[17.6, 67.1, 3,11.6],

        [19.4, 64.4, 2.1,12.3],[22.3, 52,1.8,12.2],[23.3, 66, 1.7,12.3],[25.1, 71.8, 1.7,12.2],

        [20.4, 70.4, 2.8,12.3],[21.8, 65.3, 2.4,12.1], [22.9, 67.4, 2.2,9.1],[24.5, 53.6, 2.4,7.2],

        [22.2, 60.6, 1.8,6.7],[23, 65.9,2.1,7.9],[20.6, 69.6, 2.1,3.5],[18.2, 57.8,2.5,5.4],

        [19.6, 47.3, 3.7,1.8],[21.8, 47.6, 3.1, 4],[25.2, 54.6, 2.9,9.5],[26.9, 41.8,2.8,11.4],

        [24.8, 37.6, 4.3,12.6],[24.8, 63.8,3,12.3],[22.6, 80.4, 1.9,12.3],[23.3, 77.8, 2.7,6.4],

        [26.4, 75.8, 2.7,8.8],[24.1, 70.1, 2.5,11.6], [21.4, 76.4, 2.1,11.6],[23.2, 71.9, 2.8,8.3],

        [27.1, 73.9,3,12.5],[25.5, 58.8, 3.3,8.4], [23, 68.3, 2.9,12.8], [24.3, 82.6, 2.4,11.9],

        [22.9, 62.3, 2.7,12.1],[27.3, 51.4,3.1,12.7],[24.7, 78.4,3.8,12.6],[27.4, 77.4, 2.9,10.6],

        [30.6, 71.6, 2.8,7.5],[22.8,78.5, 2.9,0],[23.3, 84.8,2.4,3.9],[20.8, 84.5,2.6,0.9],

        [23.8, 78.6,3.5,8.2],[25.6, 80.4,3.9,9.6],[27.5, 75.3, 3.1,6.5],[29.8, 66.6, 3,10.6],

        [26.5, 78, 1.6,8.8],[28.7, 68.8, 2,6.8],[21.2, 74.3, 3.2,0.2],[23.6,84.3, 4.5,3.2],

        [23.6,75.6, 1.9,10.3],[27.2,82.6, 2,1.5],[26.5, 81.4, 1.6,5.8],[27.1, 83.5, 3.3,4.9],

        [27.9, 82.6,2.7,11.7],[28.4, 83.6, 1.8,12.2],[30.1,79.1, 2.1,11.9],[27.7,89.3,2,0.6],

        [26.4, 79.4, 1.3,2.1], [30.4,77.8,2,6],[31.6,77.9,1.8,2],[30,71.4,2.6,0.9],

        [31.6,86.5,1.4,3.7],[29.7,75.3,1.5,0.2],[30.5, 79.6,2.2,1.2],[32.7,83.6, 2.7,1],

        [30.7, 84.4,1.8,1.5],[30.9,87.5,1.9,2],[31.3,87.3,1.6,3.2],[31.3,86.6,1.5,3.1],

        [32.1,83.4,2.7,3],[33.2,82.5,3.7,2.3],[31.5,81.1, 3.1,7.3],[31.2,79.6, 2.3,9.2],

        [28.7,91.9, 1.7,4.2],[26.4,95.8,1,8.2],[29.6,83.6,1.1,2.5],[29,90.8,3.5,5.1],

        [30.5,85.8,3.3,1.8],[32.8,79.8, 2.7,3.7],[27.7,92.9,1.7,0.8],[28.7,85.4, 2.3,1],

        [29.3, 79.4,2.5,0],[30.7,85.8,2,0],[29.1,89.9, 5.2,9],[30.2,86.1, 3.3,0.9],

        [31.7,80.9,2.2,0.6],[27.7,90.3,3.2,3.3],[26.3,86.5,2.3,0.6],[27.4,78.1,2.3,7.1],

        [26.9,76.5,1.7,0.8],[25.9,69.3,1.9,5.2],[28.1,67.4,1.2,4.1],[21,84.5,2.1,3.2],

        [20.7,93.6,2.6,3.6],[25.2,89.6,2.3,4],[28.2,81,1.1,3],[27.9,72.4,2.4,5.2],

        [29.8,72.4,2.4,7.7],[29.8,83.8,2.2,7.1],[25,95.3,2.3,0],[24.3,84.5,4.7,2.9],

        [26.6, 85.9,1.7,2.9],[26.7,77.4,1.3,4.3],[28.9,65.1,1.3,10.7],[27.1, 68.1,1.5,8.2],

        [27.9,70.3,1.6,3.2],[26.1,90.6,0.9,2.7],[26.6,79.3,1.8,4.2],[27.9,52.4,3.2,3],

        [31.6,67.1,3,6.2],[32.4,75.5,2.6,5.1],[31,80.4,1.7,6.1],[32.8,74,2.1,7.8],

        [29.7,67,4.4,6.2],[24.7,64,1.5,1.8],[24.9,70.6,1.4,0.2],[23.8,71.4,1.1,0],

        [23.2,74.6,2.7,0.4],[22.8,75.5,1.7,8.2],[23.8, 74.5,1.2,7.2],[25, 78.4,1.1,4.3],

        [25.9, 84.1, 1.4,8.2],[24.8,84.6,1.1,10.2],[23.5,82.9,1.6,0],[26.4,82.5,1.5,0],

        [27.9,80.9,0.9,7.5],[29.7,63.8,1.9,3.1],[27.3,86.9,3.2,0],[24.6,100,5,0],

        [19.1,100,5.2,0],[20.9,94.6,3.3,0.5],[19,66.3,3.2,9.9],[22.2,69.8,1.7,9],

        [15.4,89.1,1.6,0],[14,89.1,7.2,3.7],[17.8,70.6,3.6,10.5],[19.6,70.8,1.2,10.6],

        [22.5,76.8,1.5,10.5],[22.2,76.1,1.5,7],[23.3,79.3,1.3,8.5],[21.7,83.3,2.2,7.5],

        [15.8,80.9,5.3,2.3],[14.5,54,2.3,9.3],[16.2,60.6,1.4,10.5],[19.4,68.3,1.1,10.4],

        [17.4,76.6,0.8,10.2],[20.4,76.3,2.7,2.5],[17.9,82.8,2.9,9.2],[15.2,70,1.4,9.4],

        [17.3,57.3,1.3,9.8],[18.7,58,1.4,10.1],[19,63.8,1.3,6.6],[17.5,70.6,1.1,9.9],

        [20.1,85.4,1.1,9.9],[21.2,79,1.5,8.2],[19.2,74.3,1.4,9.5],[2.3,47,1.7,7],

        [5.3,54.5,1.6,9.3],[8.7,70.1,1.8,0.6],[5.2,41.9,3.1,1.6],[4.2,40.5,1.7,6.5],

        [7.7,60.9,3.1,4.9],[9.3,57.8,3.8,6.1],[10.5,73.8,1,7.3],[11.9,74.4,1,5.4],

        [6.1,66.9,0.7,2.1],[8.6,58.3,1.5,9.1],[6.7,72.8,1.7,4.0],[7.1,56,3.3,2.4],

        [-1.1,71.9,7.3,7],[6.3,75.6,2.3,5],[0.3,51.6,1.8,3.3], [1.1,74.6,2.7,0.6],

        [-2.5, 61,1.4,4.6],[1.4,62.6,1.7,8.9],[5.2,61,1.1,7.9],[4.4,90.5,1.5,0],

        [1.4,90.1,1.5,0.6],[-5,90.6,1.5,0.9],[-3.8,78,1.5,7.7],[2.2,80.9,1.7,6.9],

        [2.6,85,4.4,3.4],[4.8,81.5,3.1,8.9],[3.4,75.4,1.1,6.9],[4,73.1,1.8,6.6],

        [4.2,77.4,1.2,4],[5.7,65.4,0.7,6.7],[3.5,69.3,4,4.9],[2.7,61.1,2.6,8.6],

        [4.4,54.1,2.5,9.8],[2.4,73,2.8,6.1],[0.3,71.3,2.8,7.3],[3.2,71.5,2.6,6.5],

        [2.5,58.9,1.3,2],[6,63.4,1.6,7.2],[6.7,68.1,1.1,8.6],[7,68.9,1.8,9.8],

        [8.8,68.5,1.1,9.6],[10.2,61.5,1.2,9.6],[10.7,57.3,1.1,5.9],[10.6,68.9,2.7,8.8],

        [1.5,71.3,5.1,5.3],[-0.8,69.1,3.4,6],[0.2,53.3,2.7,10.1],[6.7,49.8,5.1,9.6],

        [4.8,62.9,3.4,4.8],[0.8,54,2.7,5.1],[6.3,71.8,3.4,7.6],[2.2,56.5,2.7,10],

        [0.9,49.8,1.3,8.8],[3.9,62.5,3.2,9.6],[9.3,77.8,4.6,8.2],[10.9,78,3.4,10.6],

        [8.6,62.3,2.7,7.8],[14,57.3,3,8.3]];


        // 242개
        // 3 5/6 8/9 10/12 2
        // 온도, 습도, 풍속, 일조 시간
        //https://www.weather.go.kr/w/obs-climate/land/past-obs/obs-by-element.do?stn=140&yy=2022&obs=35 출처


        var 판매량 = [[206],[186],[188],[179],[204],[203],[201],[206],[191],[193],

        [201],[212],[195],[192],[204],[210],[209],[194],[191],[186],

        [188],[188],[194],[212],[197],[195],[178],[188],[187],[175],

        [193],[210],[205],[183],[192],[195],[173],[197],[187],[205],

        [150],[152],[171],[163],[157],[201],[179],[202],[142],[164],

        [167],[185],[190],[160],[177],[198],[153],[150],[181],[179],



       // 봄 가을 수치 (상대적으로 적음)

        [218],[217],[214],[227],[222],[230],[252],[225],[215],[212],

        [214],[232],[240],[253],[213],[238],[241],[240],[228],[239],

        [234],[217],[225],[259],[213],[202],[203],[258],[199],[210],

        [223],[233],[200],[245],[225],[256],[220],[249],[207],[266],





        [169],[148],[185],[191],[175],[157],[158],[179],[185],[150],

        [143],[185],[156],[142],[193],[154],[155],[170],[180],[168],

        [156],[175],[195],[179],[184],[176],[157],[195],[161],[155],

        [184],[183],[153],[166],[163],[179],[181],[163],[171],[162],

        [159],[187],[190],[178],[187],[190],[184],[189],[161],[175],

        [156],[183],[178],[168],[184],[162],[165],[159],[168],[190],


 
        //
        [188],[188],[244],[234],[197],[243],[190],[222],[222],[214],

        [204],[215],[237],[185],[231],[208],[207],[233],[239],[226],

        [217],[240],[214],[210],[190],[227],[228],[186],[200],[243],

        [238],[240],[194],[195],[224],[195],[241],[185],[231],[186],

        //
        [168],[215],[218],[224],[142],[147],[194],[214],[189],[143],

        [159],[198],[219],[221],[212],[179],[169],[183],[233],[166],

        [172],[153],[209],[192],[227],[233],[178],[163],[167],[188],

        [220],[231],[173],[172],[187],[169],[234],[240],[239],[216],

        [134],[177]

        ];



        

        var 원인 = tf.tensor(판매_원인);
        var 결과 = tf.tensor(판매량);

        // 모델
        var X = tf.input({shape: [4]}); //  input layer
        var H = tf.layers.dense({units: 4}).apply(X); // hidden layer 음수로 떨어질 일이 없기 때문에 relu 사용
        var Y = tf.layers.dense({units: 1}).apply(H); // output layer 
        var model = tf.model({inputs : X, outputs : Y});
        var compileParam = {optimizer : tf.train.adam(), loss: tf.losses.meanSquaredError}
        model.compile(compileParam);
        
        //  학습
        // var fitParam = {epochs : 100}
        var _history = [];
        var fitParam = {
            epochs : 500,
            callbacks: {
                onEpochEnd:
                function(epoch, logs) {
                    console.log('epoch', epoch,logs, 'RMSE=>', Math.sqrt(logs.loss));
                    _history.push(logs);
                    tfvis.show.history({name: 'loss', tap : '역사'}, _history, ['loss']);
                }    
            }
        }
        model.fit(원인, 결과, fitParam).then(function(result) {
            var 예측 = model.predict(원인);
            예측.print();
        });
    </script>
</body>
</html>